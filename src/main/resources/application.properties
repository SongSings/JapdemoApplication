#thymelea模板配置
#spring.thymeleaf.prefix=/templates
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
#spring.thymeleaf.content-type=text/html
#thymeleaf 设置不校验html标签
spring.thymeleaf.cache=false
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**

#更改springboot端口号(默认是8080)
server.port=80

#数据库连接配置
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=Book
spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
spring.datasource.username=sa
spring.datasource.password=123

#hibername,jpa 配置
#自动创建|更新|验证数据库表结构#update
spring.jpa.properties.hibernate.hbm2ddl.auto=none
#主要是指定生成表名的存储引擎为 SQLServer2012Dialect-----InneoDB
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
#是否打印出自动生产的SQL，方便调试的时候查看
spring.jpa.show-sql=true

# spring.jpa.properties.hibernate.default_schema = schema
spring.jpa.hibernate.ddl-auto=create
spring.datasource.initialize=true
spring.jpa.database=SQL_SERVER

#
##jpaconfiguration
##spring.jpa.hibernate.ddl-auto=update
##spring.jpa.show-sql=true
#
#ms.db.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#ms.db.url=jdbc:sqlserver://localhost:1433;databaseName=Book
#ms.db.username=sa
#ms.db.password=sa
#ms.db.maxActive=500

#邮件配置
#邮箱服务器地址
spring.mail.host=smtp.qq.com
spring.mail.username=403741953@qq.com
spring.mail.password=mxbbyqairaodcaae
spring.mail.default-encoding=UTF-8
#端口，这里添加587即可
spring.mail.port=587
Djava.net.preferIPv4Stack=true
#以谁来发送邮件
mail.fromMail.addr=403741953@qq.com

#MultipartFile是Spring上传文件的封装类，包含了文件的二进制流和文件属性等信息，在配置文件中也可对相关属性进行配置，基本的配置信息如下：
#默认支持文件上传.
spring.http.multipart.enabled=true
#支持文件写入磁盘.
spring.http.multipart.file-size-threshold=5MB
# 上传文件的临时目录
spring.http.multipart.location=C:\\Users\\lenovo\\Pictures
# 最大支持文件大小
spring.http.multipart.max-file-size=10Mb 
# 最大支持请求大小
spring.http.multipart.max-request-size=10Mb 

#log4j配置
log4j.rootLogger=INFO,logfile
log4j.appender.logfile=org.apache.log4j.FileAppender
#没生效---
log4j.appender.logfile.file=../log/log
log4j.appender.logfile.Append=true
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
#两个之间不能同时配置
#logging.file，设置文件，可以是绝对路径，也可以是相对路径。如：logging.file=my.log
#logging.path，设置目录，会在该目录下创建spring.log文件，并写入日志内容，如：logging.path=/var/log
#如果只配置 logging.file，会在项目的当前路径下生成一个 xxx.log 日志文件。
#如果只配置 logging.path，在 /var/log文件夹生成一个日志文件为 spring.log
#logging.path=E:/
logging.file=my.log
#*为包名，包底下的class文件都为这个级别  #logging.level.* = DEBUG
logging.level.com.datajpa.jpademo=DEBUG
#设置打印,输出级别
logging.level.root=WARN

# liunx 上乱码设置
#spring.http.encoding.force=true
#spring.http.encoding.charset=UTF-8
#spring.http.encoding.enabled=true
#server.tomcat.uri-encoding=UTF-8
#spring.http.encoding.charset=UTF-8
#spring.messages.basename=messages
#spring.messages.cache-seconds=-1
#spring.messages.encoding=UTF-8
Dfile.encoding=utf-8
#不显示图标
spring.mvc.favicon.enabled=false

